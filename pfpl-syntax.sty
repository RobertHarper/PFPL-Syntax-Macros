\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pfpl-syntax}[2022/01/15 1.0.0 PFPL Syntax Macros]
\RequirePackage{amsmath,amssymb,amsthm,mathtools,stmaryrd,bigplustimes}

% camel case is used for internal macros in the vain hope to avoid conflicts.
% latex desperately needs sensible scoping of identifiers!

\ProvideDocumentCommand{\kw}{m}{\texttt{#1}}
\ProvideDocumentCommand{\singmap}{m m}{#1\hookrightarrow #2}
\ProvideDocumentCommand{\finmap}{m m m}{\singmap{#2}{#3_#2}\mid #2\in #1}

\newboolean{opnidx}\setboolean{opnidx}{false}  % typeset operator indices or not

% starred for math name, non-starred for verbatim name, optional index
\NewDocumentCommand{\Opn}{s m o}{\mathop{\IfBooleanTF{#1}{#2}{\kw{#2}}\IfValueT{#3}{\ifthenelse{\boolean{opnidx}}{_{#3}}{}}}}

% applied form of \Abt allows for optional argument and omission of main argument.  
% starred form of \Abt sets optional argument as subscript to operator
\NewDocumentCommand{\Var}{m d<> d()}{\mathop{#1}\IfValueT{#2}{\,\langle #2\rangle\,}\IfValueT{#3}{(#3)}}
\NewDocumentCommand{\Abs}{d<> d() m}{\IfValueT{#1}{#1\mathbin{.}}\IfValueT{#2}{#2\mathbin{.}} #3}
\NewDocumentCommand{\Abt}{s m d<> o m}{\mathop{#2}\IfBooleanT{#1}{\IfValueT{#4}{_{#4}}}\IfValueT{#3}{\langle #3\rangle}\IfBooleanF{#1}{\IfValueT{#4}{[#4]}}\ifthenelse{\isempty{#5}}{}{(#5)}}
% choose starred form of \Abt according to argument
\NewDocumentCommand{\Abbrt}{m}{\IfBooleanTF{#1}{\Abt*}{\Abt}}

% positive/negative type indicator
\NewDocumentCommand{\posty}{m}{#1^{\mathtt{+}}}
\NewDocumentCommand{\negty}{m}{#1^{\mathtt{-}}}

% yes/no answer type
\NewDocumentCommand{\ansty}{s}{\Abt{\Opn{ans}}{}}
\NewDocumentCommand{\yesex}{s}{\Abt{\Opn{yes}}{}}
\NewDocumentCommand{\noex}{s}{\Abt{\Opn{no}}{}}

% total function type
\NewDocumentCommand{\arrAbt}{m m}{\Abt{\Opn{fun}}{#1; #2}}
\NewDocumentCommand{\arrCst}{m m}{#1\to #2}
\NewDocumentCommand{\arrty}{s m m}{\IfBooleanTF{#1}{\arrCst{#2}{#3}}{\arrAbt{#2}{#3}}}
\NewDocumentCommand{\funty}{s m m}{\IfBooleanTF{#1}{\arrCst{#2}{#3}}{\arrAbt{#2}{#3}}}
\NewDocumentCommand{\lamex}{s O{\tau_1} m O{\tau_2} m}{\Abbrt{#1}{\Opn*{\lambda}}[#2;#4]{\Abs(#3){#5}}}
\NewDocumentCommand{\appex}{s O{\tau_1} O{\tau_2} m m}{\Abbrt{#1}{\Opn{ap}}[#2;#3]{#4;#5}}

% product types
% nullary
\NewDocumentCommand{\unitty}{s}{\Abt{\IfBooleanTF{#1}{\Opn*{\mathbf{1}}}{\Opn{unit}}}{}}
\NewDocumentCommand{\unitex}{s}{\IfBooleanTF{#1}{\langle\rangle}{\Abt{\Opn{null}}{}}}
% binary
\NewDocumentCommand{\prodAbt}{m m}{\Abt{\Opn{prod}}{#1;#2}}
\NewDocumentCommand{\prodCst}{m m}{#1\times #2}
\NewDocumentCommand{\prodty}{s m m}{\IfBooleanTF{#1}{\prodCst{#2}{#3}}{\prodAbt{#2}{#3}}}
\NewDocumentCommand{\pairAbt}{m m m m}{\Abt{\Opn{pair}}[#1;#2]{#3; #4}}
\NewDocumentCommand{\pairCst}{m m}{\langle #1, #2\rangle}
\NewDocumentCommand{\pairex}{s O{\tau_1} O{\tau_2} m m}{\IfBooleanTF{#1}{\pairCst{#4}{#5}}{\pairAbt{#2}{#3}{#4}{#5}}}
\NewDocumentCommand{\projAbt}{m m m m}{\Abt{\Opn{proj}}<#1>[#2;#3]{#4}}
\NewDocumentCommand{\projCst}{m m}{#2\cdot #1}
\NewDocumentCommand{\projex}{s d<> O{\tau_1} O{\tau_2} m}{\IfBooleanTF{#1}{\projCst{#2}{#5}}{\projAbt{#2}{#3}{#4}{#5}}}
% n-ary
\NewDocumentCommand{\vprodAbt}{m m m}{\Abt{\Opn{prod}[#1]}{\finmap{#1}{#2}{#3}}}
\NewDocumentCommand{\vprodCst}{m m m}{\bigtimes_{#2\in #1}(\singmap{#2}{{#3}_{#2}})}
\NewDocumentCommand{\vprodty}{s D<>{I} D<>{i} m}{\IfBooleanTF{#1}{\vprodCst{#2}{#3}{#4}}{\vprodAbt{#2}{#3}{#4}}}
\NewDocumentCommand{\vtupleAbt}{m m m m}{\Abt{\Opn{tuple}[#1]}[#3_#1]{\finmap{#1}{#2}{#4}}}
\NewDocumentCommand{\vtupleCst}{m m m}{\langle \singmap{#2}{#3_{#2}}\mid #2\in #1\rangle}
\NewDocumentCommand{\vtupleex}{s D<>{I} D<>{i} O{\tau} m}{\IfBooleanTF{#1}{\vtupleCst{#2}{#3}{#5}}{\vtupleAbt{#2}{#3}{#4}{#5}}}
\NewDocumentCommand{\vprojAbt}{m m m m}{\Abt{\Opn{proj}[#1]}<#2>[#3_{#1}]{#4}}
\NewDocumentCommand{\vprojCst}{m m}{#2\cdot #1}
\NewDocumentCommand{\vprojex}{s D<>{I} D<>{i} O{\tau} m}{\IfBooleanTF{#1}{\vprojCst{#3}{#5}}
{\vprojAbt{#2}{#3}{#4}{#5}}}

% sum types
% nullary
\NewDocumentCommand{\voidty}{s}{\Abt{\IfBooleanTF{#1}{\Opn*{\mathbf{0}}}{\Opn{void}}}{}}
\NewDocumentCommand{\absurdex}{s O{\rho} m}{\Abbrt{#1}{\Opn{absurd}}[#2]{#3}}
% binary
\NewDocumentCommand{\sumAbt}{m m}{\Abt{\Opn{sum}}{#1; #2}}
\NewDocumentCommand{\sumCst}{m m}{#1+#2}
\NewDocumentCommand{\sumty}{s m m}{\IfBooleanTF{#1}{\sumCst{#2}{#3}}{\sumAbt{#2}{#3}}}
\NewDocumentCommand{\injAbt}{d<> m m m}{\Abt{\Opn{inj}}<#1>[#2;#3]{#4}}
\NewDocumentCommand{\injCst}{d<> m}{#1\cdot #2}
\NewDocumentCommand{\injex}{s d<> O{\tau_1} O{\tau_2} m}{\IfBooleanTF{#1}{\injCst<#2>{#5}}{\injAbt<#2>{#3}{#4}{#5}}}
\NewDocumentCommand{\caseAbt}{m m m m m}{\Abt{\Opn{case}}[#1_1; #1_2; #2]{#3; \Abs(#4){#5_1}; \Abs(#4){#5_2}}}
\NewDocumentCommand{\caseCst}{m m m m}{\Opn{case}_{#1} #2\,\{\singmap{1}{\Abs(#3){#4_1}} \mid \singmap{2}{\Abs(#3){#4_2}}\}}
\NewDocumentCommand{\caseex}{s O{\tau} O{\rho} m m m}{\IfBooleanTF{#1}{\caseCst{#3}{#4}{#5}{#6}}{\caseAbt{#2}{#3}{#4}{#5}{#6}}}
% n-ary
\NewDocumentCommand{\vsumAbt}{m m m}{\Abt{\Opn{sum}[#1]}{\finmap{#1}{#2}{#3}}}
\NewDocumentCommand{\vsumCst}{m m m}{\bigplus_{#2\in #1}(\singmap{#2}{{#3}_{#2}})}
\NewDocumentCommand{\vsumty}{s D<>{I} D<>{i} m}{\IfBooleanTF{#1}{\vsumCst{#2}{#3}{#4}}{\vsumAbt{#2}{#3}{#4}}}
\NewDocumentCommand{\vinjAbt}{m m m m}{\Abt{\Opn{inj}[#1]}<#2>[#3_{#1}]{#4}}
\NewDocumentCommand{\vinjCst}{m m}{#1\cdot #2}
\NewDocumentCommand{\vinjex}{s D<>{I} D<>{i} O{\tau} m}{\IfBooleanTF{#1}{\vinjCst{#3}{#5}}{\vinjAbt{#2}{#3}{#4}{#5}}}
\NewDocumentCommand{\vcaseAbt}{m m m m m m m}{\Abt{\Opn{case}[#1]}[#4_#1;#3]{#5;\finmap{#1}{#2}{\Abs(#6){#7}}}}
\NewDocumentCommand{\vcaseCst}{m m m m m m}{\Opn{case}_{#3} #4\,\{\finmap{#1}{#2}{\Abs(#5){#6}}\}}
\NewDocumentCommand{\vcaseex}{s D<>{I} D<>{i} O{\tau} O{\rho} m m m}{\IfBooleanTF{#1}{\vcaseCst{#2}{#3}{#5}{#6}{#7}{#8}}{\vcaseAbt{#2}{#3}{#4}{#5}{#6}{#7}{#8}}}

% booleans, sum of one and one.
\NewDocumentCommand{\boolty}{s}{\Abt{\IfBooleanTF{#1}{\Opn*{\mathbf{2}}}{\Opn{bool}}}{}}
\NewDocumentCommand{\trueex}{s}{\Abt{\Opn{true}}{}}
\NewDocumentCommand{\falseex}{s}{\Abt{\Opn{false}}{}}
\NewDocumentCommand{\ifex}{s O{\rho} m m m}{\Abbrt{#1}{\Opn{if}}[#2]{#3; #4; #5}}

% inductive type; intro is foldex below
\NewDocumentCommand{\indty}{s m m}{\Abt{\Opn{ind}}{\Abs(#2){#3}}}
\NewDocumentCommand{\recex}{s O{t} O{\tau} O{\rho} m m m}{\Abbrt{#1}{\Opn{rec}}[\Abs(#2){#3}; #4]{#5;\Abs(#6){#7}}}

% coinductive type; elim is unfoldex below
\NewDocumentCommand{\coity}{s m m}{\Abt{\Opn{coi}}{\Abs(#2){#3}}}
\NewDocumentCommand{\genex}{s O{t} O{\tau} O{\sigma} m m m}{\Abbrt{#1}{\Opn{gen}}[\Abs(#2){#3};#4]{#5;\Abs(#6){#7}}}

% continuation type
\NewDocumentCommand{\contty}{s m}{\Abt{\Opn{cont}}{#2}}
\NewDocumentCommand{\contex}{s m}{\Abt{\Opn{cont}}{#2}}
\NewDocumentCommand{\letccex}{s O{\tau} m m}{\Abbrt{#1}{\Opn{letcc}}[#2]{\Abs(#3){#4}}}
\NewDocumentCommand{\throwex}{s O{\tau} O{\rho} m m}{\Abbrt{#1}{\Opn{throw}}[#3]{#4; #5}}  % first type argument is lost
\NewDocumentCommand{\stkhole}{s}{\IfBooleanTF{#1}{\Abt{\Opn*{\mathord{-}}}{}}{\Abt{\Opn*{\circ}}{}}}
\NewDocumentCommand{\empstk}{s O{\tau}}{\IfBooleanTF{#1}{\Abt*{\Opn*{\varepsilon}}[#2]{}}{\Abt{\Opn{emp}}[#2]{}}}
\NewDocumentCommand{\extstk}{s m m}{\IfBooleanTF{#1}{#2\mathbin{\kw{;}}#3}{\Abt{\Opn{ext}}{#2; #3}}}

% universal and existential types
\NewDocumentCommand{\Allty}{s m m}{\Abt{\Opn*{\forall}}{\Abs(#2){#3}}}
\NewDocumentCommand{\Lamex}{s m O{\tau} m}{\Abbrt{#1}{\Opn*{\Lambda}}[\Abs(#2){#3}]{\Abs(#2){#4}}}
\NewDocumentCommand{\Appex}{s O{t} O{\tau} m m}{\Abbrt{#1}{\Opn{Ap}}[\Abs(#2){#3}]{#4;#5}}

\NewDocumentCommand{\Somety}{s m m}{\Abt{\Opn*{\exists}}{\Abs(#2){#3}}}
\NewDocumentCommand{\PackAbt}{m m m m}{\Abt{\Opn{Pack}}[\Abs(#1){#2}]{#3; #4}}
\NewDocumentCommand{\PackCst}{m m m m}{\PackAbt{#1}{#2}{#3}{#4}}
\NewDocumentCommand{\Packex}{s O{t} O{\tau} m m}{\Abbrt{#1}{\Opn{Pack}}[\Abs(#2){#3}]{#4; #5}}
\NewDocumentCommand{\OpenAbt}{m m m m m m}{\Abt{\Opn{Open}}[\Abs(#1){#2};#4]{#3;\Abs(#1,#5){#6}}}
\NewDocumentCommand{\Openex}{s O{t} O{\tau} m O{\rho} m m}{\Abbrt{#1}{\Opn{Open}}[\Abs(#2){#3};#5]{#4;\Abs(#2,#6){#7}}}

% partial function type with recursive lambda, shares application form with total
\NewDocumentCommand{\parrAbt}{m m}{\Abt{\Opn{pfun}}{#1; #2}}
\NewDocumentCommand{\parrCst}{m m}{#1\mathbin{\rightharpoonup} #2}
\NewDocumentCommand{\parrty}{s m m}{\IfBooleanTF{#1}{\parrCst{#2}{#3}}{\parrAbt{#2}{#3}}}
\NewDocumentCommand{\pfunty}{s m m}{\IfBooleanTF{#1}{\parrCst{#2}{#3}}{\parrAbt{#2}{#3}}}
\NewDocumentCommand{\funex}{s O{\tau_1} O{\tau_2} m m m}{\Abbrt{#1}{\Opn{fun}}[#2;#3]{\Abs(#4,#5){#6}}}
\NewDocumentCommand{\fixex}{s O{\tau} m m}{\Abbrt{#1}{\Opn{fix}}[#2]{\Abs(#3){#4}}}

% recursive type
\NewDocumentCommand{\recty}{s m m}{\Abt{\Opn{rec}}{\Abs(#2){#3}}}
\NewDocumentCommand{\foldex}{s O{t} O{\tau} m}{\Abbrt{#1}{\Opn{fold}}[\Abs(#2){#3}]{#4}}
\NewDocumentCommand{\unfoldex}{s O{t} O{\tau} m}{\Abbrt{#1}{\Opn{unfold}}[\Abs(#2){#3}]{#4}}

% untyped
\NewDocumentCommand{\ulamex}{s m m}{\Abt{\Opn*{\lambda}}{\Abs(#2){#3}}}
\NewDocumentCommand{\uapex}{s m m}{\IfBooleanTF{#1}{#2(#3)}{\Abt{\Opn{app}}{#2;#3}}}
\NewDocumentCommand{\uIex}{s}{\textbf{\kw{I}}}
\NewDocumentCommand{\uKex}{s}{\textbf{\kw{K}}}
\NewDocumentCommand{\uSex}{s}{\textbf{\kw{S}}}
\NewDocumentCommand{\uBex}{s}{\textbf{\kw{B}}}

% commands
\NewDocumentCommand{\cmdty}{s m}{\Abt{\Opn{cmd}}{#2}}
\NewDocumentCommand{\cmdex}{s O{\tau} m}{\Abbrt{#1}{\Opn{cmd}}[#2]{#3}}

\NewDocumentCommand{\retcmd}{s O{\tau} m}{\Abbrt{#1}{\Opn{ret}}[#2]{#3}}

\NewDocumentCommand{\dclAbt}{m m m m}{\Abt{\Opn{dcl}}[#1; #2]{#3; #4}}
\NewDocumentCommand{\dclCst}{m m m m}{\Opn{dcl}_{#1}\,#3\mathbin{\mathtt{:=}}#2\mathbin{\kw{in}}#4}
\NewDocumentCommand{\dclcmd}{s O{\tau} m O{\rho} m m}{\IfBooleanTF{#1}{\dclCst{#2}{#3}{#5}{#6}}{\dclAbt{#2}{#4}{#3}{\Abs<#5>{#6}}}}

\NewDocumentCommand{\bndAbt}{m m m m m}{\Abt{\Opn{bnd}}[#1; #2]{#3; \Abs(#4){#5}}}
\NewDocumentCommand{\bndCst}{m m m}{\Opn{bnd}\,#2\mathbin{\leftarrow}#1\mathbin{\mathtt{;}}#3}
\NewDocumentCommand{\bndcmd}{s O{\tau} m O{\rho} m m}{\IfBooleanTF{#1}{\bndCst{#3}{#5}{#6}}{\bndAbt{#2}{#4}{#3}{#5}{#6}}}

% reference types
\NewDocumentCommand{\refAbt}{m}{\Abt{\Opn{ref}}<#1>{}}
\NewDocumentCommand{\refCst}{m}{\texttt{\&}\,#1}
\NewDocumentCommand{\refex}{s m}{\IfBooleanTF{#1}{\refCst{#2}}{\refAbt{#2}}}

\NewDocumentCommand{\getAbt}{m}{\Abt{\Opn{get}}<#1>{}}
\NewDocumentCommand{\getCst}{m}{\Opn{!}{#1}}
\NewDocumentCommand{\getcmd}{s m}{\IfBooleanTF{#1}{\getCst{#2}}{\getAbt{#2}}}

\NewDocumentCommand{\getrefAbt}{m m}{\Abt{\Opn{getref}}[#1]{#2}}
\NewDocumentCommand{\getrefCst}{m}{\mathtt{*}#1}
\NewDocumentCommand{\getrefcmd}{s O{\tau} m}{\IfBooleanTF{#1}{\getrefCst{#3}}{\getrefAbt{#2}{#3}}}

\NewDocumentCommand{\setAbt}{m m}{\Abt{\Opn{set}}<#1>{#2}}
\NewDocumentCommand{\setCst}{m m}{#1\mathbin{\mathtt{:=}}#2}
\NewDocumentCommand{\setcmd}{s m m}{\IfBooleanTF{#1}{\setCst{#2}{#3}}{\setAbt{#2}{#3}}}

\NewDocumentCommand{\setrefAbt}{m m m}{\Abt{\Opn{setref}}[#1]{#2; #3}}
\NewDocumentCommand{\setrefCst}{m m}{#1\mathbin{\mathtt{*{=}}} #2}
\NewDocumentCommand{\setrefcmd}{s O{\tau} m m}{\IfBooleanTF{#1}{\setrefCst{#3}{#4}}{\setrefAbt{#2}{#3}{#4}}}

% dependent types
\NewDocumentCommand{\univsg}{s}{\Abt{\Opn{type}}{}}
\NewDocumentCommand{\valmod}{s m}{\Abt{\Opn{val}}{#2}}

\NewDocumentCommand{\piAbt}{m m m}{\Abt{\Opn*{\prod}}{#1;\Abs(#2){#3}}}
\NewDocumentCommand{\piCst}{m m m}{#2{\mathbin{:}}#1\to #3}
\NewDocumentCommand{\pisg}{s m m m}{\IfBooleanTF{#1}{\piCst{#2}{#3}{#4}}{\piAbt{#2}{#3}{#4}}}

\NewDocumentCommand{\sigAbt}{m m m}{\Abt{\Opn*{\sum}}{#1;\Abs(#2){#3}}}
\NewDocumentCommand{\sigCst}{m m m}{#2{\mathbin{:}}#1\times #3}
\NewDocumentCommand{\sigsg}{s m m m}{\IfBooleanTF{#1}{\sigCst{#2}{#3}{#4}}{\sigAbt{#2}{#3}{#4}}}

\NewDocumentCommand{\extAbt}{m m}{\Abt{\Opn{Ext}}{#1; #2}}
\NewDocumentCommand{\extCst}{m m}{\{#1\mid \textsf{st}\hookrightarrow #2\}}
\NewDocumentCommand{\extsg}{s m m}{\IfBooleanTF{#1}{\extCst{#2}{#3}}{\extAbt{#2}{#3}}}

\NewDocumentCommand{\compAbt}{m}{\Abt{\Opn{Comp}}{#1}}
\NewDocumentCommand{\compCst}{m}{\mathop{\bigcirc} #1}
\NewDocumentCommand{\compsg}{s m}{\IfBooleanTF{#1}{\compCst{#2}}{\compAbt{#2}}}
